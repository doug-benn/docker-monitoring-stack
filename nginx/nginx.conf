events { }

##
# Logging Settings 
##
# Enabling request time
# log_format custom '$remote_addr - $remote_user [$time_local]'
#                   '"$request" $status $body_bytes_sent'
#                   '"$http_referer" "$http_user_agent"'
#                   '"$request_time" "$upstream_connect_time"';
# access_log /var/log/nginx/access.log custom;
# error_log /var/log/nginx/error.log;

error_log /dev/stdout info;



http {
    access_log /dev/stdout;
    # This is backend server, in this case referencing to the node domain, which is equal to the service name (see docker-compose.yml -> node)
    upstream backend {
        # Make sure this is the correct port your Node.js service is listening on
        server app:8000;
    }

    server {
        listen 80;
        # Feel free to adjust the max_body_size, default is 2M which might be too low, compared to the pure Node.js service
        client_max_body_size 20M;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /stub_status {
            stub_status;
            access_log off;
            allow 127.0.0.1; # Or your monitoring server's IP
            deny all;
        }
    }
}
